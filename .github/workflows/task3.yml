name: Cypress API Test Automation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Cypress binary
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cypress-

      - name: Install dependencies
        run: npm ci

      # Ensuring that the Cypress binary directory has execution permissions
      - name: Ensure Cypress binary permissions
        run: chmod +x ~/.cache/Cypress/13.15.0/Cypress/Cypress

      - name: Install Cypress with elevated permissions
        run: sudo npx cypress install

      - name: Create reports directory
        run: mkdir -p cypress/reports  

      # Use xvfb to enable a headless GUI for Cypress tests
      - name: Run Cypress tests with XVFB
        run: |
          sudo apt-get install -y xvfb
          xvfb-run --auto-servernum --server-args="-screen 0 1280x1024x24" npx cypress run || true

      # Check for mochawesome reports
      - name: Check for mochawesome reports
        run: |
          echo "Checking for report files..."
          if ls cypress/reports/*.json 1> /dev/null 2>&1; then
            echo "JSON report files found:"
            ls -l cypress/reports/*.json
          else
            echo "No JSON reports found."
            exit 0
          fi

      # Merge test results into one report using mochawesome-merge
      - name: Merge Cypress test results
        run: |
          echo "Merging reports..."
          if [ -n "$(ls -A cypress/reports/*.json 2>/dev/null)" ]; then
            npx mochawesome-merge cypress/reports/*.json > cypress/reports/mochawesome.json || true
            if [ -s cypress/reports/mochawesome.json ]; then
              npx marge cypress/reports/mochawesome.json --reportDir cypress/reports --inline
            else
              echo "Merged report is empty or failed to generate."
              exit 1
            fi
          else
            echo "No JSON reports found to merge."
            exit 0
          fi


      # Verify attachment exists
      - name: Check for attachment
        run: |
          if [ -f cypress/reports/mochawesome.html ]; then
            echo "Attachment found."
          else
            echo "Attachment not found."
            exit 1
          fi
  

      # Send email with test report
      - name: Send email notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Cypress Test Report for ${{ github.repository }}
          body: "The Cypress test run for ${{ github.repository }} has completed. Check the attached report for detailed results."
          to: |
            oluwashola.olagbemisoye@mtn.com, 
            shola.olagbemisoye@wemabank.com, 
            olushola@ebsafr.com, 
            olawunmitolulope6@gmail.com
          from: shola.mich.7438@gmail.com   # Change this to the sender email
          attachments: cypress/reports/mochawesome.html
